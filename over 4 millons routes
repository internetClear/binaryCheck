遍历377行代码的超4百万路径----端午小礼

早上一觉醒来，看了哈昨天的路径遍历情况：终于停了：4886157.
说哈背景：我做小规模的控制流路径分析压力测试。找了自己写的C语言小工具的源代码，编译成执行文件。反编译出约有超44W的二进制代码，超8K个函数。虽然前面做了分析，但是大规模的路径遍历还是有点不放心。于是决定将这8K个函数的所有路径都遍历一次，毕竟路径遍历是精确分析的核心之一。
说哈方案：只是做路径遍历生成，不做其它分析。前面近8K个函数都没有问题，后来发现有几个函数路径跑1-2天都没有遍历完，一看路径到了百万，单个函数（3-400行代码）到百万，我的认知是爆了。就有点发毛了：担心路径遍历算法有问题。路径遍历算法原理看似简单，但是这二进制指令中其实有很多问题（我前后花了很多时间测试哈修改过该算法）。没办法，只好重新分析。
从理论上看算法的可行性，OK。从着色有向图的角度分析算法的问题，OK。将算法用文字推理多遍，OK。生成了2W多条路径后用双重循环去遍历是否有路径重复，OK（因为生成路径测试要费很多时间没有测试更多的路径，心里也没底，就没有搞很多）。还想了其它的一些方法...
其实还有最后的办法，将函数的代码手工分析测算哈，看有多少条路径。但是这个工作太复杂，就一直拖着。其实这个路径的分析问题我拖了近两周了：没有进展就没有动力；还有畏难的惰性；加上一些琐事。昨天晚上睡觉前想：实在找不出来就明天手工测算哈吧。然后又临时想让机器跑一晚上看看是否能有结果，于是22:30的样子简单的修改代码让它跑起来。早上6点多起来看了哈，还在跑，想来是没有戏了，准备手工分析吧，回去再睡会再说。到了7点多，起来准备搞点吃的，顺便看了哈机器：天啊，它停了！！！
4886157条路径，她妈的这是377行代码生成的路径。还是我写的代码！不过我写的源代码很简单的，连循环都没有，不到70行，编译后就搞出了这么多路径，我也是服了。
很好！经过这次，我大概可以自信路径遍历没有问题，可以精确的分析路径了。
如果有人想测试该指令的可以和我联系。就377行。

